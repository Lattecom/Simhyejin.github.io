{"meta":{"title":"JENNY|개발자","subtitle":"컴공녀의 개발 블로그","description":"Sim Hyejin's IT, Programming blog","author":"Sim Hyejin","url":"https://simhyejin.github.io"},"pages":[{"title":"ABOUT JENNY","date":"2016-06-27T07:54:17.000Z","updated":"2016-06-27T07:54:17.000Z","comments":false,"path":"about/index.html","permalink":"https://simhyejin.github.io/about/index.html","excerpt":"","text":"안녕하세요. 컴공녀의 개발 블로그 의 심제니입니다.프로그래밍에 관심있으며 다양한 분야를 공부하고 있습니다.이 블로그는 공부중인 전공과 개발하면서 발생한 오류 해결 방법을 공유하려고 합니다. JENNY 컴퓨터공학과 졸업 Now : iOS 공부 및 개발 보유 Skills C JAVA Python Web (HTML, CSS, PHP, JAVASCRIPT, Node.js, Angular.js) Android Hyejin Jenny Sim"}],"posts":[{"title":"Hexo Generator Alias","slug":"hexo-generator-alias","date":"2016-06-30T12:54:41.000Z","updated":"2016-06-30T14:47:23.000Z","comments":true,"path":"2016/06/30/hexo-generator-alias/","link":"","permalink":"https://simhyejin.github.io/2016/06/30/hexo-generator-alias/","excerpt":"","text":"이번 포스트는 Hexo Generator Alias라는 플러그인에 대해 소개하겠습니다.저는 url Redirecion 을 하기 위해 사용하였습니다. 얼마 전 검색 최적화 엔진(SEO)에 맞춰 url을 내용과 구체적으로 관련있게 하기위해 포스트 파일명의 이름을 변경하였습니다.2번째 포스트인 Hexo+GitHub pages은 포스트 파일 명이 hexo-git 에서 hexo-github-pages 으로 변경되었습니다. 이미 색인된 상태에서 구글에 예전 페이지가 남아있어 404 에러를 발생시켰습니다.구글 웹마스터 도구 &gt; Google 색인 &gt; URL 삭제로 예전 URL을 삭제하였지만 url 오류 라는 크롤링 오류가 발생하여 Hexo Generator Alias 플러그인으로 이전 URL을 현 URL로 Redirecion 하였습니다. Hexo Generator Alias 플러그인Generates alias pages for redirecting to posts, pages or URL.URL, 페이지, 포스트 리다이렉션을 위한 에일리어스 페이지 생성하는 플러그인이다. 설치터미널을 열고 hexo가 설치되어있는 blog 폴더에서 npm을 통해 Hexo Generator Alias 플러그인을 설치한다.1npm install hexo-generator-alias --save 이용법 Post file 에서 alias 12345alias: about/index.htmlalias:- about/index.html- bar/index.html 또는 _config.yml에서 alias123alias: api/index.html: api/classes/Hexo.html plugins/index.html: https://github.com/tommy351/hexo/wiki/Plugins 나의 사용기저는 2번째 방법인 _config.yml에서 alias를 지정했습니다.이전 페이지 html path : 현재 페이지 html path를 설정하시면 됩니다.12alias: /2016/06/20/hexo-git/index.html: /2016/06/20/hexo-github-pages/index.html 이로 인해https://simhyejin.github.io/2016/06/20/hexo-git/— Redirection —&gt;https://simhyejin.github.io/2016/06/20/hexo-github-pages/이전 페이지 url을 눌러도 현 페이지로 이동합니다. URL Redirection으로 삭제된 페이지를 현 페이지에 연결하는 것이 좋은 방법이라고 생각하지는 않습니다.Hexo Generator Alias 플러그인으로 리다이렉션 하는 법 말고 다른 좋은 방법을 아시는 분은 알려주세요:) #Blog #Hexo #Plugin&lt; 이전 포스트 Hexo 테마 적용하기","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://simhyejin.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"},{"name":"plugin","slug":"plugin","permalink":"https://simhyejin.github.io/tags/plugin/"},{"name":"hexo generator alias","slug":"hexo-generator-alias","permalink":"https://simhyejin.github.io/tags/hexo-generator-alias/"},{"name":"redirection","slug":"redirection","permalink":"https://simhyejin.github.io/tags/redirection/"}]},{"title":"[Markdown] 마크다운 문법","slug":"Markdown-help","date":"2016-06-29T16:41:00.000Z","updated":"2016-06-30T13:07:48.000Z","comments":true,"path":"2016/06/30/Markdown-help/","link":"","permalink":"https://simhyejin.github.io/2016/06/30/Markdown-help/","excerpt":"","text":"마크다운 문법에 대해 소개하겠습니다. 목차 제목 Headers 인용 Blockquotes 코드 블럭 Code Blocks 인라인 코드 Inline Code Blocks 강조 Emphasis 수평선 Horizontal Rules 링크 Links 외부 링크 External Links 내부 링크 Internal (Anchored) Links 리스트 Lists 순서 있는 리스트 Ordered Lists 순서 없는 리스트 Unordered Lists 테이블 Tables 이미지 Adding Images 각주 Footnotes 마크다운 문법제목 Headers#으로 시작하는 텍스트.#은 하나부터 여섯개까지 쓸 수 있고, #이 늘어날때마다 제목의 수준은 내려간다.(보통 글씨 크기가 작아진다.) 마크다운 실행결과 # h1## h2### h3#### h4##### h5###### h6 h1 h2 h3 h4 h5 h6 또는 -, =을 이용하여 h1, h2를 쓸 수 있다. 마크다운 실행결과 h1===h2— h1 h2 인용 Blockquotes&gt;으로 시작하는 텍스트 마크다운 실행결과 &gt; 인용문 인용문 &gt;&gt; 인용문안의 인용문 인용문 인용문 코드 블럭 Code Blocks``` 혹은 ~~~ 코드 첫 줄과 마지막 줄에 Back quote ( ` ) 또는 물결( ~ ) 3개 삽입 마크다운 실행결과 ```이것은코드 블럭입니다```~~~ 이것은 코드 블럭입니다~~~ 123이것은코드 블럭입니다123이것은코드 블럭입니다 ```cvoid f() printf(%s,“이것은 c 코드 입니다”);}``` 123void f()&#123; printf(%s,“이것은 c 코드 입니다”);&#125; 인라인 코드 Inline Code Blocks`(Back quote)로 감싸진 텍스트 마크다운 실행결과 `인라인 코드 블럭` 인라인 코드 블럭 강조 Emphasis기울여 쓰기(italic) : * 또는 _로 감싼 텍스트굴게쓰기(bold) : ** 또는 __로 감싼 텍스트 마크다운 실행결과 *기울여쓰기(italic)*_기울여쓰기(italic)_**굵게쓰기(bold)**__굵게쓰기(bold)__ 기울여쓰기(italic)기울여쓰기(italic)굵게쓰기(bold)굵게쓰기(bold) 수평선 Horizontal Rules- 또는 * 또는 _ 을 3개 이상 작성(단, -을 사용할 경우 header로 인식할 수 있으니 이 전 라인은 비워두어야한다.) 마크다운 실행결과 --- *** ___ 링크 Links외부 링크 External Links[링크](http://example.com &quot;링크 제목&quot;) 인라인 링크[링크1][1] [1]: http://example1.com/ &quot;링크제목1&quot; 참조 링크&lt;example.com/&gt; &lt;example@example.com&gt; url 링크 마크다운 실행결과 인라인 링크 [Google](http://www.google.co.kr “구글”) Google 참조 링크 [Google][1][Naver][2][1]: http://google.com/ “구글”[2]: http://naver.com/ “네이버” GoogleNaver URl 링크&#60;http://google.com/&#62;&#60;example@gmail.com/&#62; http://google.com&#x65;&#x78;&#x61;&#x6d;&#112;&#108;&#x65;&#64;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109; 내부 링크 Internal (Anchored) Links[링크](#id) 내부 링크 마크다운 실행결과 [목차](#index) 목차 리스트 Lists순서 있는 리스트 Ordered ListsNo. 숫자 다음 .을 찍는다. (적힌 숫자랑 상관없이 순서대로 번호가 매겨진다.) 마크다운 실행결과 1. list item 11. list item 22. list item 30. list item 43. list item 5 list item 1list item 2list item 3list item 4list item 5 순서 없는 리스트 Unordered Lists*, +, - 으로 시작 마크다운 실행결과 * list item 1 * list item 1-1 * list item 1-2 list item 1list item 1-1list item 1-2 + list item 1 + list item 1-1 + list item 1-2 list item 1list item 1-1list item 1-2 - list item 1 - list item 1-1 - list item 1-2 list item 1list item 1-1list item 1-2 테이블 Tables 마크다운 실행결과 테이블 생성Header 1 &#124; Header 2&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45; &#124; &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;Content 1 &#124; Content 3Content 2 &#124; Content 4 Header 1Header 2Content 1Content 3Content 2Content 4 테이블 정렬&#124; Header 1 &#124; Header 2 &#124; Header 3 &#124;&#124; :&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45; &#124; :&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;: &#124; &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;: &#124;&#124; Left &#124; Center &#124; Right &#124; Header 1Header 2Header 3LeftCenterRight 이미지 Adding Images 마크다운 실행결과 인라인 이미지!&#91;alt text&#93;&#40;/test.png &#41; 링크 이미지!&#91;alt text&#93;&#40;image_URL&#41; 참조 이미지!&#91;alt text&#93;&#91;1&#93;&#91;1&#93;: /test.png 각주 Footnotes각주입니다[^id][^id]: 각주에 대한 설명. #Blog #Markdown&lt; 이전 포스트 [Markdown] title 대괄호[] 사용하기","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://simhyejin.github.io/tags/markdown/"},{"name":"마크다운","slug":"마크다운","permalink":"https://simhyejin.github.io/tags/마크다운/"},{"name":"markdown syntax","slug":"markdown-syntax","permalink":"https://simhyejin.github.io/tags/markdown-syntax/"},{"name":"마크다운 문법","slug":"마크다운-문법","permalink":"https://simhyejin.github.io/tags/마크다운-문법/"}]},{"title":"G2 터치 불량 무상수리","slug":"g2-touch-screen","date":"2016-06-28T13:57:26.000Z","updated":"2016-06-29T10:34:11.000Z","comments":true,"path":"2016/06/28/g2-touch-screen/","link":"","permalink":"https://simhyejin.github.io/2016/06/28/g2-touch-screen/","excerpt":"","text":"G2 사용자입니다. 저의 G2는 거의 3년째 사용하고 있는 정말 오래 쓴!! 스마트폰입니다.G2 터치 불량으로 15년 9월부터 16년 9월까지 무상 수리 해주는 거 알고 계셨습니까? 저번주 토요일 G2 터치 불량으로 무상수리 받고 왔습니다. 1. G2 터치 불량 무상수리 공지 작년 9월 7일부터 1년간 보증기간이 지나도! 고객 과실(침수, 파손 등)이 아니면 1회 무상 수리를 받을 수 있습니다.하지만 저 공고는 이제 LG 서비스센터에서는 찾아볼 수도 없었습니다.터치 이상으로 검색 중 무상서비스에 대해 알게 되었고 기간이 2개월 가량 남아있었던 덕에 무상 수리를 받을 수 있었습니다.터치 불량으로 판단되시는 분은 9월 전에 무상 수리 받으세요! 2. G2 터치 불량 발생 확인하기2013년 9월에 구입한 G2로 잦은 렉과 꺼짐 현상은 있었습니다.몇일 전 부터 자판에 ㄹ, ㅊ 이 입력 되지가 않아 Q메모로 하였습니다.아래 가운데 부분의 터치가 먹히지 않았습니다. 3. LG 서비스센터LG 서비스센터에서 센터방문 예약을 하시면 기다리지 않고 서비스를 받을 수 있습니다.저는 토요일에 방문 예약이 이미 풀이라 40분 정도 기다렸습니다. 기사분께 터치 이상 부분 Q메모로 보여드렸고 터치 불량 무상수리를 위한 진단을 하십니다. 가장 먼저 히든 메뉴(다이얼에서 3845#*320# 입력)를 통해 HW Device Test &gt; Touch Test &gt; Finger Paint 로 터치 이상을 확인을 하시고 Check Synatics Touch Panel을 확인 하셨습니다. 저는 4개의 test Result 중 2개만 Pass였다고 합니다. 그 다음 뒷면의 카메라 왼편에 있는 침수 라벨을 확인 하셨습니다.저는 한번도 물에 빠트린 적은 없으나 3년 가까이 사용하다보니 습기로 인해 살짝 분홍 빛이 돌았는데요. 침수 라벨이 변색됬기 때문에 내부에 침수가 심하면 유상이라는 말을 들었습니다.물에 빠진 적이 한번도 없기에 내부 침수는 정말 약한 수준이라고 하였습니다. 무상수리 기준을 통과하여 무상서비스를 받았습니다! 4. 결과10분 정도 기다리니 완전 새 폰이 되어 돌아왔습니다!! 액정 필름까지 붙여주시고 서비스 짱짱!폰을 바꿀 시기가 된거 같지만 액정 교체로 G2를 좀 더 쓰게 될 거 같습니다:)","categories":[{"name":"Diary","slug":"Diary","permalink":"https://simhyejin.github.io/categories/Diary/"},{"name":"일상","slug":"Diary/일상","permalink":"https://simhyejin.github.io/categories/Diary/일상/"}],"tags":[{"name":"g2","slug":"g2","permalink":"https://simhyejin.github.io/tags/g2/"},{"name":"touch 불량","slug":"touch-불량","permalink":"https://simhyejin.github.io/tags/touch-불량/"},{"name":"액정 교체","slug":"액정-교체","permalink":"https://simhyejin.github.io/tags/액정-교체/"},{"name":"무상 수리","slug":"무상-수리","permalink":"https://simhyejin.github.io/tags/무상-수리/"}]},{"title":"Hexo 테마 적용하기","slug":"hexo-themes","date":"2016-06-24T07:11:20.000Z","updated":"2016-06-30T14:33:42.000Z","comments":true,"path":"2016/06/24/hexo-themes/","link":"","permalink":"https://simhyejin.github.io/2016/06/24/hexo-themes/","excerpt":"","text":"이전 포스트 Hexo+GitHub pages에서 Hexo 와 GitHub Pages를 연동하여 블로그를 만들었습니다. 이번 포스트는 테마를 바꿔 블로그를 꾸며 보도록 하겠습니다.Hexo 는 다양한 테마를 지원해 줍니다. Hexo Themes 에서 원하는 테마를 고를 수 있습니다.데스크탑, 태블릿, 모바일 등 지원 가능한 반응형 테마를 고르기 위해 responsive을 검색하였고 그 중 Hueman이라는 테마를 적용하엿습니다.Hueman 테마 적용법과 테마 설정(CSS 수정, Thumbnail, Disqus)에 대해 소개하겠습니다. 목차 Hueman 테마 적용하기 Hueman 설치 Hueman 설정 Theme Color Thumbnail Disqus Hueman 테마 적용하기설치 터미널을 열어 hexo init했던 폴더(이하 blog 폴더)에 들어갑니다. Heuman 테마를 themes/hueman 폴더에 clone합니다. 12$ cd blog$ git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman blog 폴더에 있는 _config.yml에서 ##Theme 부분을 landscape 에서 hueman 으로 수정합니다. 12## Themes: https://hexo.io/themes/theme: hueman themes/hueman 폴더에 있는 _config.yml.example를 _config.yml로 바꿉니다. (Optional) 최신 버전을 다운 받기위해 pull해줍니다. 12$ cd themes/hueman$ git pull (Optional) Hueman 테마의 Insight Search 검색엔진을 사용하기위해 npm으로 hexo-generator-json-content을 설치합니다. 1$ npm install -S hexo-generator-json-content 설정themes/hueman 폴더에 있는 _config.yml에서 아래의 테마 설정을 바꿀 수 있습니다. Theme Menu Customize(Logo, Thema Color, Highlight, Sidebar, Thumbnail, Favicon, Social Links) Widgets : Recent Posts, Category, Archive, Tag, Tag Cloud, Links Search Comment : Disqus Share Plugins Miscellaneous - Theme Color저는 제 로고의 보라색을 따와 Theme Color를 보라색으로 설정했습니다.Hueman 테마의 Theme Color는 오른쪽 사이드바의 Follow영역의 색을 바꾸게 해줍니다.또한 Theme Color는 이외에도 여러군데 사용이됩니다. 게시물 hover 글자 드래그 링크등이 Theme Color가 적용됩니다.저의 Theme Color 보라색인 링크 글씨과 검은색 글씨의 눈으로 보기에 차이가 나지않아서 링크 글씨의 색을 지금 보이는 것과 같은 하늘색으로 바꾸었습니다. [링크 색 바꾸기] themes/hueman/source/css/_partial 폴더의 article.styl 파일을 수정하면 됩니다. 12345.article-entry //... a //링크 color: \"원하는색상\" //... 이 외에도 styl 파일을 수정하면 커스터마이징 가능합니다. - Thumbnailthemes/hueman 폴더에 있는 _config.yml에서 true, false 로 설정 할 수 있습니다.12customize: thumbnail: true # enable posts thumbnail, options: true, false 포스트에 thumbnail 추가하기source/images에 이미지 파일을 넣고 포스트 font-matter에 thumbnail을 추가하고 이미지 경로를 넣어줍니다.12345---title: Hexo 테마 적용하기date: 2016-06-24 16:11:20thumbnail: /images/hueman.jpg--- 혹은 이미지 url인 경우에는 thumbnail을 추가하고 이미지 경로 url을 넣어줍니다.12345---title: Hexo 테마 적용하기date: 2016-06-24 16:11:20thumbnail: https://example.com/image.jpg--- - Disqusthemes/hueman 폴더에 있는 _config.yml에서 #Comment 부분의 disqus 에 disqus shortname을 적어줍니다.123# Commentcomment: disqus: [Disqus Shortname] # enter disqus shortname here [ShortName 만들기 및 확인하기]먼저 Disqus 계정이 있어야합니다. 회원가입 또는 SNS(페이스북, 트위터, 구글)로 로그인 가능합니다. Get Started 클릭 후 블로그 이름 설정(예시: aaaaba)[※블로그 이름이 Short Name으로 설정됩니다] 왼쪽 General 클릭하면 ShortName 확인 할수 있습니다. #Blog #Hexo&lt; 이전 포스트 Hexo+GitHub pages다음 포스트 &gt; Hexo Generator Alias","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://simhyejin.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"},{"name":"themes","slug":"themes","permalink":"https://simhyejin.github.io/tags/themes/"},{"name":"hueman","slug":"hueman","permalink":"https://simhyejin.github.io/tags/hueman/"},{"name":"thumbnail","slug":"thumbnail","permalink":"https://simhyejin.github.io/tags/thumbnail/"},{"name":"disqus","slug":"disqus","permalink":"https://simhyejin.github.io/tags/disqus/"},{"name":"theme color","slug":"theme-color","permalink":"https://simhyejin.github.io/tags/theme-color/"}]},{"title":"[Markdown] title 대괄호[] 사용하기","slug":"markdown-post-title","date":"2016-06-24T06:22:11.000Z","updated":"2016-06-30T07:34:42.000Z","comments":true,"path":"2016/06/24/markdown-post-title/","link":"","permalink":"https://simhyejin.github.io/2016/06/24/markdown-post-title/","excerpt":"","text":"Hexo로 블로그를 운영하며 마크다운(Markdown)을 사용하여 포스트를 작성하고 있습니다.포스트 제목 앞에 대괄호를 썻더니 오류가 발생하였습니다. 이에 대한 해결방안을 가져왔습니다. YAMLException: can not read a block mapping entry 해결하기위 사진과 같이 포스트를 작성할 때 title 앞에 대괄호를 넣으면 아래와 같은 Error가 발생합니다. 1234ERROR Process failed: _posts/test.mdYAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 2, column 5: date: 2016-06-24 15:19:38 ^ 해결방법은 간단합니다.아래와 같이 title을 “” 큰따옴표 or ‘’ 작은따옴표로 감싸주시면 됩니다. 문제해결 완료 :) #Blog #Markdown다음 포스트 &gt; [Markdown] 마크다운 문법","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://simhyejin.github.io/tags/markdown/"},{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"},{"name":"post","slug":"post","permalink":"https://simhyejin.github.io/tags/post/"},{"name":"title","slug":"title","permalink":"https://simhyejin.github.io/tags/title/"},{"name":"square bracket","slug":"square-bracket","permalink":"https://simhyejin.github.io/tags/square-bracket/"}]},{"title":"OWASP TOP 10 (2013)","slug":"owasp13","date":"2016-06-22T06:01:47.000Z","updated":"2016-06-27T06:44:47.000Z","comments":true,"path":"2016/06/22/owasp13/","link":"","permalink":"https://simhyejin.github.io/2016/06/22/owasp13/","excerpt":"","text":"OWASPOWASP(Open Web Application Security Project)는 신뢰할 수있는 애플리케이션을 개발 및 유지보수하기 위해 노력하는 오픈 커뮤니티입니다. 주로 애플리케이션에 관한 정보노출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하며, 10대 웹 애플리케이션의 취약점(OWASP TOP 10)을 발표합니다. Top 10 프로젝트의 목표는 조직에서 직면한 가장 중요한 몇 가지 위험요소를 식별해 애플리케이션 보안에 대한 인식을 향상시키는 데 있습니다. OWASP TOP 10은 웹 애플리케이션 취약점 중에서 빈도가 높고, 보안상 영향을 크게 줄 수 있는 것들 10가지를 선정하여 2004년, 2007년, 2010년, 2013년을 기준으로 발표하고 있습니다. OWASP의 모든 문서는 애플리케이션 보안성 향상에 관심 있는 모두에게 무료이며 OWASP홈페이지에서 확인 가능합니다. 2016년 OWASP TOP 10이 나오기 전에 2013 OWASP TOP 10을 살펴 보려고 합니다. 2010 과 2013 OWASP TOP 10 비교 2013 OWASP TOP 10 A1 : Injection (인젝션, 삽입)SQL, 운영체제, LDAP 인젝션 취약점은 신뢰할 수 없는 데이터가 명령어나 질의문의 일부분으로서 인터프리터로 보내질 때 발생한다. 공격자의 악의적인 데이터는 예상하지 못하는 명령을 실행하거나 적절한 권한 없이 데이터에 접근하도록 인터프리터를 속일 수 있다. A2 : Broken Authentication and Session Management (취약한 인증 및 세션 관리)인증과 세션 관리와 관련된 애플리케이션 기능은 정확하게 구현되어 있지 않아서, 공격자가 패스워드, 키 또는 세션 토큰을 해킹하거나 다른 구현 취약점을 공격하여 다른 사용자 ID로가장할 수 있다. A3 : Cross-Site Scripting (XSS, 크로스 사이트 스크립팅)XSS 취약점은 애플리케이션이 신뢰할 수 없는 데이터를 가져와 적절한 검증이나 제한 없이 웹 브라우저로 보낼 때 발생한다. XSS는 공격자가 피해자의 브라우저에 스크립트를 실행하여 사용자 세션 탈취, 웹 사이트 변조, 악의적인 사이트로 이동할 수 있다. A4 : Insecure Direct Object References (안전하지 않은 직접 객체 참조)직접 객체 참조는 개발자가 파일, 디렉토리, 데이터베이스 키와 같은 내부 구현 객체를 참조하는 것을 노출시킬 때 발생한다. 접근 통제를 통한 확인이나 다른 보호수단이 없다면, 공격자는 노출된 참조를 조작하여 허가 받지 않은 데이터에 접근할 수 있다. A5 : Security Misconfiguration (보안 설정 오류)훌륭한 보안은 애플리케이션, 프레임워크, 애플리케이션 서버, 웹 서버, 데이터베이스 서버 및 플랫폼에 대해 보안 설정이 정의되고 적용되어 있다. 기본으로 제공되는 값은 종종 안전하지 않기 때문에 보안 설정은 정의, 구현 및 유지되어야 한다. 또한 소프트웨어는 최신의 상태로 유지해야 한다. A6 : Sensitive Data Exposure (민감 데이터 노출)많은 웹 애플리케이션들이 신용카드, 개인 식별 정보 및 인증 정보와 같은 중요한 데이터를 제대로 보호하지 않는다. 공격자는 신용카드 사기, 신분 도용 또는 다른 범죄를 수행하는 등 약하게 보호된 데이터를 훔치거나 변경할 수 있다. 중요 데이터가 저장 또는 전송 중이거나 브라우저와 교환하는 경우 특별히 주의하여야 하며, 암호화와 같은 보호조치를 취해야 한다. A7 : Missing Function Level Access Control (기능 수준의 접근통제 누락)대부분의 웹 애플리케이션은 UI에 해당 기능을 보이게 하기 전에 기능 수준의 접근권한을 확인한다. 그러나, 애플리케이션은 각 기능에 접근하는 서버에 동일한 접근통제 검사를 수행한다. 요청에 대해 적절히 확인하지 않을 경우 공격자는 적절한 권한 없이 기능에 접근하기 위한 요청을 위조할 수 있다. A8 : Cross-Site Request Forgery (CSRF, 크로스 사이트 요청 위조)CSRF 공격은 로그온 된 피해자의 취약한 웹 애플리케이션에 피해자의 세션 쿠키와 기타 다른 인증정보를 자동으로 포함하여 위조된 HTTP 요청을 강제로 보내도록 하는 것이다.이것은 공격자가 취약한 애플리케이션이 피해자로부터의 정당한 요청이라고 오해할 수 있는 요청들을 강제로 만들 수 있다. A9 : Using Components with Known Vulnerabilities (취약점이 있는 컴포넌트 사용)컴포넌트, 라이브러리, 프레임워크 및 다른 소프트웨어 모듈은 대부분 항상 전체 권한으로 실행된다. 이러한 취약한 컴포넌트를 악용하여 공격하는 경우 심각한 데이터 손실이발생하거나 서버가 장악된다. 알려진 취약점이 있는 컴포넌트를 사용하는 애플리케이션은 애플리케이션 방어 체계를 손상하거나, 공격 가능한 범위를 활성화하는 등의 영향을 미친다. A10 : Unvalidated Redirects and Forwards (검증되지 않은 리다이렉트 및 포워드)웹 애플리케이션은 종종 사용자들을 다른 페이지로 리다이렉트 하거나 포워드하고, 대상 페이지를 결정하기 위해 신뢰할 수 없는 데이터를 사용한다. 적절한 검증 절차가 없으면 공격자는 피해자를 피싱 또는 악성코드 사이트로 리다이렉트 하거나 승인되지 않은 페이지에 접근하도록 전달할 수 있다. 참조 OWASP TOP 10https://www.owasp.org/index.php/Top10#OWASP_Top_10_for_2013https://www.owasp.org/images/2/2c/OWASP_Top_10_-_2013_Final_-_Korean.pdf","categories":[{"name":"CSE","slug":"CSE","permalink":"https://simhyejin.github.io/categories/CSE/"},{"name":"보안","slug":"CSE/보안","permalink":"https://simhyejin.github.io/categories/CSE/보안/"}],"tags":[{"name":"owasp","slug":"owasp","permalink":"https://simhyejin.github.io/tags/owasp/"},{"name":"security","slug":"security","permalink":"https://simhyejin.github.io/tags/security/"}]},{"title":"Hexo+GitHub pages","slug":"hexo-github-pages","date":"2016-06-20T07:37:00.000Z","updated":"2016-06-30T14:33:38.000Z","comments":true,"path":"2016/06/20/hexo-github-pages/","link":"","permalink":"https://simhyejin.github.io/2016/06/20/hexo-github-pages/","excerpt":"","text":"이전 포스트 Hexo 정적 블로그 프레임워크에서 Hexo 설치와 설정을 알아봤습니다.제 블로그는 GitHub Pages 와 Hexo 로 운영하고 있습니다.이번 포스트는 GitHub Pages 으로 사이트 만드는 법과 Hexo와 GitHub Pages 연동, ERROR Deployer not found: git 오류에 대해 포스트하겠습니다. GitHub PagesGitHub Pages 는 GitHub에서 무료로 호스팅하는 공개 웹페이지입니다.GitHub의 저장소에서 개인이나 조직 또는 프로젝트 페이지를 호스팅하도록 설계되어 있습니다.GitHub에서 제공하는 페이지 제작 도구로 쉽게 페이지를 만들어 공개할 수도 있고, 로컬에서 git을 이용해 수동으로 만들 수도 있습니다. GitHub Pages 의 종류는 크게 두가지로 나뉩니다. 개인 사이트 GitHub Pages 프로젝트 사이트 GitHub Pages 개인 사이트는 &lt;username&gt;.github.io라는 저장소를 만들게되면 자동으로 개인 사이트를 위한 GitHub Pages를 만들 수 있습니다.이 사이트의 저장소 브랜치는 master에서 만들어져야 합니다. 프로젝트 사이트는 GitHub에 등록한 프로젝트별로 사이트를 자동으로 만들 수 있습니다.프로젝트 사이트는 &lt;username&gt;.github.io/[프로젝트 저장소 이름]으로 만들어집니다.사이트의 저장소를 위한 브랜치가 gh-pages라는 브랜치이여야 합니다. 이 블로그는 개인 사이트 Github Pages로 Github 저장소의 이름을 simhyejin.github.io로 설정하여 만들었습니다. GitHub Pages에 대한 자세한 내용은 GitHub help에서 확인할 수 잇습니다. Git pages에 Hexo 적용먼저 hexo-deployer-git을 설치합니다. 1$ npm install hexo-deployer-git --save 주의!ERROR Deployer not found: githexo-deployer-git을 설치 하지 않으면 deploy시 위와 같은 ERROR가 발생합니다. 그 다음 _config.ym 파일을 열어 #deploymeny 부분을 수정합니다. 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/Simhyejin/Simhyejin.github.io.git branch: master repo : GitHub repository URLbranch : 브랜치 이름message : 커밋 내용. 커스터마이징 가능합니다. (Site updated:’YYYY-MM-DD HH:mm:ss’ 로 기본 설정되있습니다.) #Blog #Hexo&lt; 이전 포스트 Hexo 정적 블로그 프레임워크다음 포스트 &gt; Hexo 테마 적용하기","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://simhyejin.github.io/tags/git/"},{"name":"github-pages","slug":"github-pages","permalink":"https://simhyejin.github.io/tags/github-pages/"},{"name":"deployer","slug":"deployer","permalink":"https://simhyejin.github.io/tags/deployer/"},{"name":"ERROR Deployer not found git","slug":"ERROR-Deployer-not-found-git","permalink":"https://simhyejin.github.io/tags/ERROR-Deployer-not-found-git/"}]},{"title":"Hexo 정적 블로그 프레임워크","slug":"blog-start-hexo","date":"2016-06-20T05:16:39.000Z","updated":"2016-06-30T12:42:40.000Z","comments":true,"path":"2016/06/20/blog-start-hexo/","link":"","permalink":"https://simhyejin.github.io/2016/06/20/blog-start-hexo/","excerpt":"","text":"블로그 시작을 위해 사용하였던 Hexo 를 소개합니다. 목차 Hexo Hexo 설치 Hexo 명령어 HexoHexo 는 Node.js 기반 정적 블로그 프레임워크 입니다. 마크다운(Markdown)을 지원하여 손쉬운 포스트 작성 가능 GitHub Pages를 이용한 호스팅을 지원 다양한 테마 제공 등 의 장점으로 이 블로그 또한 Hexo 와 GitHub Pages 로 제작되었습니다.Hexo 설치와 실행법에 대해 소개하겠습니다. Hexo 설치Hexo 를 설치 하기 위해서는 Node.js와 Git이 설치 되어 있어야합니다.아래의 링크를 통해 설치가 가능합니다. Node.js Git Node.js 와 Git이 설치되어 있다면 이제 Hexo 를 설치할 수 있습니다. 설치터미널을 열어 명령어를 통해 Hexo를 설치합니다. 1$ npm install -g hexo-cli Hexo 가 설치 되었다면 아래의 명령어를 통해 Hexo 폴더를 초기 설정합니다.(디렉토리명은 Github repo 이름과 달라도 무관합니다.) 123$ hexo init &lt;디렉토리명&gt;$ cd &lt;디렉토리명&gt;$ npm install 위 과정이 끝나면 폴더안에 아래의 파일이 생성됩니다. 12345678.├── _config.yml : 사이트 설정 파일. 대부분의 설정 할 수 있습니다. ├── package.json : 응용 프로그램 데이터. ├── scaffolds : 새 게시물을 작성하면 Hexo는 scaffolds 폴더에 새로운 파일을 기반으로 하고 있습니다.├── source : 소스 폴더. 사이트 콘텐츠를 넣어두는 폴더입니다.| ├── _drafts | └── _posts └── themes : 테마 폴더. Hexo는 테마와 콘텐츠를 결합하여 정적 웹 사이트를 생성합니다. 실행모든 설치가 끝났다면 내장 서버를 돌려봅니다. 1$ hexo server localhost:4000을 통해 확인합니다.(기본포트 : 4000) 자주 쓰는 명령어New post새로운 포스트 생성 1$ hexo new \"My New Post\" Generate정적 파일 생성 1$ hexo generate 또는 1$ hexo g Opition으로-d , –deploy : generate가 끝난후 deploy-w , –watch : 파일 변화 확인 deploy원격 사이트에 올리기 1$ hexo deploy 또는 1$ hexo d Opition으로-g , –generate : deploy 전에 generate 그 외에는 Hexo Commands에서 확인 할 수 있습니다. #Blog #Hexo다음 포스트 &gt; Hexo+GitHub pages","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://simhyejin.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"},{"name":"정적 블로그 프레임워크","slug":"정적-블로그-프레임워크","permalink":"https://simhyejin.github.io/tags/정적-블로그-프레임워크/"},{"name":"git","slug":"git","permalink":"https://simhyejin.github.io/tags/git/"},{"name":"Node.js","slug":"Node-js","permalink":"https://simhyejin.github.io/tags/Node-js/"},{"name":"헥소","slug":"헥소","permalink":"https://simhyejin.github.io/tags/헥소/"},{"name":"Static Site Generator","slug":"Static-Site-Generator","permalink":"https://simhyejin.github.io/tags/Static-Site-Generator/"}]}]}