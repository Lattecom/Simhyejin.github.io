{"meta":{"title":"Jenny","subtitle":"Sim Hyejin's IT blog","description":null,"author":"Sim Hyejin","url":"https://simhyejin.github.io"},"pages":[],"posts":[{"title":"GitHub pages Hexo적용하기","slug":"hexo-git","date":"2016-06-20T07:37:00.000Z","updated":"2016-06-21T04:38:24.000Z","comments":true,"path":"2016/06/20/hexo-git/","link":"","permalink":"https://simhyejin.github.io/2016/06/20/hexo-git/","excerpt":"","text":"GitHub PagesGitHub Pages는 GitHub에서 무료로 호스팅하는 공개 웹페이지입니다.GitHub의 저장소에서 개인이나 조직 또는 프로젝트 페이지를 호스팅하도록 설계되어 있습니다.GitHub에서 제공하는 페이지 제작 도구로 쉽게 페이지를 만들어 공개할 수도 있고, 로컬에서 git을 이용해 수동으로 만들 수도 있습니다. GitHub Pages의 종류는 크게 두가지로 나뉩니다. 개인 사이트 GitHub Pages 프로젝트 사이트 GitHub Pages 개인 사이트는 &lt;username&gt;.github.io라는 저장소를 만들게되면 자동으로 개인 사이트를 위한 GitHub Pages를 만들 수 있습니다.이 사이트의 저장소 브랜치는 master에서 만들어져야 합니다. 프로젝트 사이트는 GitHub에 등록한 프로젝트별로 사이트를 자동으로 만들 수 있습니다.프로젝트 사이트는 &lt;username&gt;.github.io/[프로젝트 저장소 이름]으로 만들어집니다.사이트의 저장소를 위한 브랜치가 gh-pages라는 브랜치이여야 합니다. 이 블로그는 개인 사이트 Github Pages로 Github 저장소의 이름을 simhyejin.github.io로 설정하여 만들었습니다. GitHub Pages에 대한 자세한 내용은 GitHub help에서 확인할 수 잇습니다. Git pages에 Hexo 적용먼저 hexo-deployer-git을 설치합니다. 1$ npm install hexo-deployer-git --save 그 다음 _config.ym 파일을 열어 #deploymeny 부분을 수정합니다. 1234deploy: type: git repo: https://github.com/Simhyejin/Simhyejin.github.io.git branch: master repo : GitHub repository URLbranch : 브랜치 이름message : 커밋 내용. 커스터마이징 가능합니다. (Site updated:’YYYY-MM-DD HH:mm:ss’ 로 기본 설정되있습니다.)","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"},{"name":"github-pages","slug":"github-pages","permalink":"https://simhyejin.github.io/tags/github-pages/"}]},{"title":"Hexo 정적 블로그 프레임워크","slug":"Hexo-start","date":"2016-06-20T05:16:39.000Z","updated":"2016-06-21T04:42:28.000Z","comments":true,"path":"2016/06/20/Hexo-start/","link":"","permalink":"https://simhyejin.github.io/2016/06/20/Hexo-start/","excerpt":"","text":"블로그 시작을 위해 사용하였던 Hexo 를 소개합니다. Hexohexo는 Node.js 기반 정적 블로그 프레임워크 입니다. 마크다운(Markdown)을 지원하여 손쉬운 포스트 작성 가능 GitHub Pages를 이용한 호스팅을 지원 다양한 테마 제공 등 의 장점으로 이 블로그 또한 GitHub Pages와 Hexo를 통해 제작되었습니다. Hexo 설치Hexo를 설치 하기 위해서는 Node.js와 Git이 설치 되어 있어야합니다.아래의 링크를 통해 설치가 가능합니다. Node.js Git Node.js와 Git이 설치되어 있다면 이제 Hexo를 설치할 수 있습니다.터미널을 열어 명령어를 통해 Hexo를 설치합니다. 1$ npm install -g hexo-cli 설치Hexo가 설치 되었다면 아래의 명령어를 통해 Hexo 폴더를 초기 설정합니다.(디렉토리명은 Github repo 이름과 달라도 무관합니다.) 123$ hexo init &lt;디렉토리명&gt;$ cd &lt;디렉토리명&gt;$ npm install 위 과정이 끝나면 폴더안에 아래의 파일이 생성됩니다. 12345678.├── _config.yml : 사이트 설정 파일. 대부분의 설정 할 수 있습니다. ├── package.json : 응용 프로그램 데이터. ├── scaffolds : 새 게시물을 작성하면 Hexo는 scaffolds 폴더에 새로운 파일을 기반으로 하고 있습니다.├── source : 소스 폴더. 사이트 콘텐츠를 넣어두는 폴더입니다.| ├── _drafts | └── _posts └── themes : 테마 폴더. Hexo는 테마와 콘텐츠를 결합하여 정적 웹 사이트를 생성합니다. 실행모든 설치가 끝났다면 내장 서버를 돌려봅니다. 1$ hexo server localhost:4000을 통해 확인합니다.(기본포트 : 4000) 자주 쓰는 명령어New post새로운 포스트 생성 1$ hexo new \"My New Post\" Generate정적 파일 생성 1$ hexo generate 또는 1$ hexo g Opition으로-d , –deploy : generate가 끝난후 deploy-w , –watch : 파일 변화 확인 deploy원격 사이트에 올리기 1$ hexo deploy 또는 1$ hexo d Opition으로-g , –generate : deploy 전에 generate 그 외에는 Hexo Commands에서 확인 할 수 있습니다.","categories":[{"name":"Blog","slug":"Blog","permalink":"https://simhyejin.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://simhyejin.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://simhyejin.github.io/tags/hexo/"}]}]}